#--------------------------------------------------
# Build worker image (VM template)
#--------------------------------------------------
image: Visual Studio 2019

#--------------------------------------------------
# Environment
#--------------------------------------------------
environment:
  GITHUB_PERSONAL_ACCESS_TOKEN:
    secure: PNVFwcCuNr+X7SffsiwiVsa/JzVyZqwNJUbeve+Or/EjOwZxbd1CUC0K/5az9jsT    
  GIT_CONFIG_USER_EMAIL:
    secure: yAZjzbVhtfeKof5pGJ/N65IjSffBIJoX5MZIpqbtHkc=
  
#--------------------------------------------------
# Project-specific environment variables
#--------------------------------------------------
  SLACK__TOKEN:
    secure: FpApXpenPAiXdeQs6yfBJiu5LFkBTiAuJd9ReZn68nKWoQTVczb4uHPBBAfW/SLhQcBDViw7pvIKPiTc5ovqdQ==
  SLACK__CHANNEL:
    secure: ggedAAYF7svY5Y2uenklSQ==

#--------------------------------------------------
# Branch whitelist - master only
#--------------------------------------------------
branches:
  only:
    - master

# Do not build on tags, since we auto-commit tags.
skip_tags: true

#--------------------------------------------------
# Build configuration
#--------------------------------------------------
configuration: Release

#--------------------------------------------------
# After cloning repository
#--------------------------------------------------
install:
  - git submodule init
  - git submodule update

#--------------------------------------------------
# Build command
#--------------------------------------------------
build:
  # Publish symbols, as per: https://www.appveyor.com/docs/build-phase/#packaging-symbols
  publish_nuget: true
  publish_nuget_symbols: true
  use_snupkg_format: true

#--------------------------------------------------
# Build hooks - before
#--------------------------------------------------
before_build:
# Patch version from directory.build.props into GitVersion.yml
# Get the fill filename and open.
  - ps: $temp_path = (Get-Item src\directory.build.props).FullName
  - ps: $temp_dbp = [xml](Get-Content $temp_path)

# Extract the version and write it out.
  - ps: $env:ofl_version = $temp_dbp.Project.PropertyGroup.Version
  - ps: Write-Host "Version to feed to GitVersion.yml - $env:ofl_version"

# Create an array, insert the new version, then add the content of the existing
# file.
  - ps: $yaml = @()
  - ps: '$yaml += "next-version: $env:ofl_version"'
  - ps: $yaml += Get-Content GitVersion.yml
  - ps: $yaml | Out-File "GitVersion.yml"

# Restore
  - dotnet restore

# Run gitversion and set appveyor build number back
  - ps: gitversion /l console /output buildserver
  - ps: $env:APPVEYOR_BUILD_VERSION = $env:GitVersion_FullSemVer
  
 # Save back to the file.
  - ps: $temp_dbp.Project.PropertyGroup.Version = $env:APPVEYOR_BUILD_VERSION
  - ps: $temp_dbp.Save($temp_path)
    
#--------------------------------------------------
# Testing
#--------------------------------------------------
test:
  assemblies:
    only:
      - '**\*.Tests.dll' 

#--------------------------------------------------
# TODO: Artifacts
#--------------------------------------------------

#--------------------------------------------------
# NuGet config
#--------------------------------------------------
nuget:
  # disable publishing of .nupkg artifacts to
  # account/project feeds for pull request builds
  disable_publish_on_pr: true

#--------------------------------------------------
# Deploy NuGet
#--------------------------------------------------
deploy:
  provider: NuGet
  api_key:
    secure: WuVzz7rQXKtG8gCcxuBARSPLoFyAed/9ymDhqOPwCSbigHBDRCHPmVv7LKHf8Q5B
  skip_symbols: false
  
#--------------------------------------------------
# Build hooks - on_success
#
# Tags the repository in GitHub with the release version.
#--------------------------------------------------
on_success:
  - git config --global credential.helper store
  - ps: Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:GITHUB_PERSONAL_ACCESS_TOKEN):x-oauth-basic@github.com`n"
  - git config --global user.email "%GIT_CONFIG_USER_EMAIL%"
  - git config --global user.name "One Frame Link"
  - git tag "v%APPVEYOR_BUILD_VERSION%"
  - git push origin "v%APPVEYOR_BUILD_VERSION%"

#--------------------------------------------------
# Notifications
#--------------------------------------------------
notifications:
  - provider: Slack
    incoming_webhook:
      secure: Y4pw1Q3aqUk/4aVYHN5R3u5Zca5ijyVi6tRAVahXhlGjSMr0ww/5c/YkAUxgtLxNfmJ5bhF5wacHko2xG2tucEIGNnRc5zHgx9/Mab6bgFo=