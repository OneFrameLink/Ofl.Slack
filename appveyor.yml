#--------------------------------------------------
# Build worker image (VM template)
#--------------------------------------------------
image: Ubuntu

#--------------------------------------------------
# Environment
#--------------------------------------------------
environment:
  GITHUB_PERSONAL_ACCESS_TOKEN:
    secure: PNVFwcCuNr+X7SffsiwiVsa/JzVyZqwNJUbeve+Or/EjOwZxbd1CUC0K/5az9jsT    
  GIT_CONFIG_USER_EMAIL:
    secure: yAZjzbVhtfeKof5pGJ/N65IjSffBIJoX5MZIpqbtHkc=

#--------------------------------------------------
# Branch whitelist
#--------------------------------------------------
branches:
  # Whitelist
  only:
    - master

# Do not build on tags, since we auto-commit tags.
skip_tags: true

#--------------------------------------------------
# Do not patch assembly info, gitversion will handle
# this
#--------------------------------------------------
assembly_info:
  patch: false

#--------------------------------------------------
# After cloning repository
#--------------------------------------------------
install:
  - git submodule init
  - git submodule update

#--------------------------------------------------
# Build configuration
#--------------------------------------------------
configuration: Release

#--------------------------------------------------
# Build command
#--------------------------------------------------
build:
  # Publish symbols, as per: https://www.appveyor.com/docs/build-phase/#packaging-symbols
  publish_nuget: false
  publish_nuget_symbols: true
  use_snupkg_format: true

#--------------------------------------------------
# Build hooks - before
#--------------------------------------------------
before_build:
# Install module for parsing yaml in powershell
  - ps: Install-Module powershell-yaml

# Patch version from directory.build.props into GitVersion.yml
  - ps: $temp_path = (Get-Item src\directory.build.props).FullName
  - ps: $temp_dbp = [xml](Get-Content $temp_path)

  - ps: $env:ofl_version = $temp_dbp.Project.PropertyGroup.Version
  - ps: Write-Host "Version to feed to GitVersion.yml - $env:ofl_version"

  - ps: Import-Module powershell-yaml
  - ps: $yaml = ConvertFrom-Yaml | Get-Content GitVersion.yml
  - ps: $yaml[0]["next-version"] = $env:ofl_version
  - ps: $yaml | Set-Content -Path GitVersion.yml

# Restore
  - dotnet restore

# Run gitversion
  - ps: gitversion /l console /output buildserver /updateAssemblyInfo
  - ps: Exit-AppveyorBuild
    
#--------------------------------------------------
# Testing
#--------------------------------------------------
test:
  assemblies:
    only:
      - '**\*.Tests.dll' 
 
#--------------------------------------------------
# NuGet config
#--------------------------------------------------
nuget:
  # disable publishing of .nupkg artifacts to
  # account/project feeds for pull request builds
  disable_publish_on_pr: true

#--------------------------------------------------
# Deploy NuGet
#--------------------------------------------------
deploy:
  provider: NuGet
  api_key:
    secure: WuVzz7rQXKtG8gCcxuBARSPLoFyAed/9ymDhqOPwCSbigHBDRCHPmVv7LKHf8Q5B
  skip_symbols: false
  
#--------------------------------------------------
# Notifications
#--------------------------------------------------
notifications:
  - provider: Slack
    incoming_webhook:
      secure: Y4pw1Q3aqUk/4aVYHN5R3u5Zca5ijyVi6tRAVahXhlGjSMr0ww/5c/YkAUxgtLxNfmJ5bhF5wacHko2xG2tucEIGNnRc5zHgx9/Mab6bgFo=